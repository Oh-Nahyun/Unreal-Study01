//
//  Study06(배열).cpp
//  CProject
//
//  Created by 오나현 on 11/20/24.
//

/*
#include <stdio.h>

/// 배열 (Array)
/// 자료형 배열이름[크기(갯수)] = (값1, 값2, ...);
int main()
{
    int a00 = 1;
    int a01 = 33;
    int a02 = 47;
    printf("%d\n", a00);
    printf("%d\n", a01);
    printf("%d\n", a02);
    
    // ----------
    
    /// 배열 초기화
    int array[3] = {1, 33, 47};         // [[Best]] 선언과 동시에 초기화.
    int array2[3] = {};                 // [[Best]] 모두 0으로 초기화.
    int array3[3];                      // [[사용X]] 초기화 안함. (쓰레기 값이 있음)
    int array4[3] = {5, 10};            // 인덱스 0번 : 5, 인덱스 1번 : 10, 나머지는 0으로 초기화.
    int array5[] = {11, 22, 33, 44};    // 배열의 크기가 원소의 크기로 자동으로 초기화.
    
    for (int i = 0; i < 3; i++)
    {
        printf("%d\n", array[i]);
    }
    
    return 0;
}

/// [예제]
/// 배열 안의 요소들의 총합을 구하는 코드를 작성해보자.
/// 조건1 : 배열(arr)과 배열의 총합을 가질 변수(sum)을 선언한다.
/// 조건2 : 반복문과 scanf_s를 이용해서 사용자에게 배열의 값들을 총 5개 입력 받는다.
/// 조건3 : 입력받은 값들을 sum 변수에 더한다.
/// 조건4 : sum 변수를 출력한다.
int main()
{
    int arr[5] = {};
    int sum = 0;
    
    for (int i = 0; i < 5; i++)
    {
        scanf("%d", &arr[i]);
        
        sum += arr[i];
        
        printf("입력된 값 : %d\n", arr[i]);
    }
    printf("배열 안 요소들의 총합 : %d\n", sum);
    
    return 0;
}

/// 배열의 주소 : 순차적(으로 늘어난)다.
int main()
{
    int array[3]; // arr[0] = 1000 byte, arr1] = 1004 byte, arr[2] = 1008 byte
    
    /// 배열의 크기
    int arr[] = {1, 2, 3, 4, 5};
    int arr2[] = {43241, 5462, 5473, 498, 512};
    
    printf("%d\n", sizeof(arr)); // 배열이 메모리 상에서 차지하고 있는 용량
                                 // int 형은 4바이트, 4 * 5 = 20 개의 용량
    printf("%d\n", sizeof(arr2));
    
    /// 배열의 길이
    int length = sizeof(arr) / sizeof(int);
    printf("arr 배열의 길이 : %d\n", length);
    
    return 0;
}

/// 배열의 크기를 이용한 for문
int main()
{
    int arr1[] = {1, 2, 3, 4, 5};
    int length = sizeof(arr1) / sizeof(arr1[0]); // int length = sizeof(arr1) / sizeof(int);
    printf("arr1 배열의 길이 : %d\n", length);
    
    for (int i = 0; i < length; i++)
    {
        printf("arr1 배열의 %d번째 원소값 : %d\n", i, arr1[i]);
    }
    
    return 0;
}
 */
